manifest {
  name = 'FLUFLO'
  author = 'Jessica M Caleta'
  homePage = 'https://github.com/j3551ca/fluflo'
  description = 'Phylogenetics in Nextflow'
  mainScript = 'main.nf'
  version = '0.1.3'
}

//pipeline parameters

params {

  //help message
  help = null

  //version number
  version = null

  //conda env local cache
  conda_cache = null 

  //directory containing config/ & data/ folders
  work_dir = "/path/to/data/"

  //reference for alignment
  ref = "${params.work_dir}/config/Ref.gb"

  //reference annotation (needed for concatenated workflow only)
  ref_anno = "${params.work_dir}/config/Ref.gff3"

  //input sequences
  seqs = "${params.work_dir}/data/sequences.fasta"

  //metadata of input sequences
  meta = "${params.work_dir}/data/metadata.csv"

  //strains that are excluded
  drop_strains = "${params.work_dir}/config/dropped_strains.txt"

  //colors used in final auspice visualization
  colors = "${params.work_dir}/config/colors.csv"

  //latitude and longitudes
  lat_long = "${params.work_dir}/config/lat_longs.csv"

  //details for auspice visualization
  auspice = "${params.work_dir}/config/auspice_config.json"

  //refining phylogeny
  divergence_units = "mutations"

  //run workflow for concatenated sequences instead of single segment
  concat = false

  //if not NONE, automate the extraction of a specific segment from fluviewer_consensus.fa files
  segment = 'NONE'

  //env variable AUGUR_RECURSION_LIMIT
  recursion_limit = 10000

}

//seamlessly run pipeline on different execution systems by modifying
//the process section of the config file. ex. AWS, SLURM, sun grid engine:

process {
  withName: align {
      cpus = 28
    }
  withName: tree {
      cpus = 28
  }
//  penv='smp'
//  executor='sge'
//  memory='30 GB'
}


profiles {
    conda {
      process.conda = "${projectDir}/environments/environment.yml"
      conda.createTimeout = '1 h'
      if (params.conda_cache) {
         conda.cacheDir = params.conda_cache
       }
     }

    //can add docker here
  }

//html displaying breakdown of time taken to execute workflow
timeline {
  enabled = true
  file = "${params.work_dir}/reports/fluflo_timeline.html"
}

//html of cpu/mem usage
report {
  enabled = true
  file = "${params.work_dir}/reports/fluflo_usage.html"
}

//dag of beast-flow workflow
dag {
    enabled = true
    file = "${params.work_dir}/reports/fluflo_dag.html"
}
